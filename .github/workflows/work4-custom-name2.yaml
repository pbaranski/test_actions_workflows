name: Custom 2

on:
  workflow_call:
    inputs:
      a:
        required: true
        type: string

  
jobs:
  simple:
    environment: dev
    runs-on: ubuntu-latest
    outputs:
      trnsformed: steps.a.outputs.NAME
      easy: steps.f.outputs.NAME
      url: steps.c.outputs.NAME
    steps:
      - id: a
        name: a Setting transformation
        run: echo "NAME=$(echo ${{ inputs.a }} | tr '-' '_' |  tr '[a-z]' '[A-Z]')" >> $GITHUB_OUTPUT
      
      - id: b
        name: b testing transformation
        run: echo ${{steps.a.outputs.NAME}}
      
      - id: c
        name: c Setting env transformation
        run: echo "NAME=$(echo ${{ secrets[format('URL_{0}', steps.a.outputs.NAME)] }})" >> $GITHUB_OUTPUT
      
      - id: d
        name: d testing env transfotmation
        run: echo ${{steps.c.outputs.NAME}}
                    
      - id: e testing secret output
        run: echo ${{ secrets.URL_M_A }}
      
      - id: f
        name: f setting simple step output
        run: echo "NAME=$(echo 'hej')" >> $GITHUB_OUTPUT
      
      - id: g testing simple step output
        run: echo ${{steps.f.outputs.NAME}}


  Read-job:
    runs-on: ubuntu-latest
    needs: simple
    steps:
      - name: transformed
        run: echo ${{needs.simple.outputs.trnsformed}}

      - name: easy
        run: echo ${{needs.simple.outputs.easy}}

      - name: url
        run: echo ${{needs.simple.outputs.url}}

  # job1:
  #   runs-on: ubuntu-latest
  #   # Map a step output to a job output
  #   outputs:
  #     output1: ${{ steps.step1.outputs.test }}
  #     output2: ${{ steps.step2.outputs.test }}
  #   steps:
  #   - id: step1
  #     run: echo "NAME=$(echo ${{ inputs.a}} | tr '-' '_' |  tr '[a-z]' '[A-Z]')" >> $GITHUB_OUTPUT
  #   - id: step2
  #     run: echo "test=world" >> $GITHUB_OUTPUT
  # job2:
  #   runs-on: ubuntu-latest
  #   needs: job1
  #   steps:
  #   - run: echo ${{needs.job1.outputs.output1}} ${{needs.job1.outputs.output2}}